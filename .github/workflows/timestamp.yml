name: TUF repository timestamp

on:
  schedule:
    - cron:  '30 6,18 * * *'
  workflow_dispatch:

jobs:
  tuf-timestamp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install git+https://github.com/vmware-labs/repository-editor-for-tuf.git

      - name: Timestamp
        working-directory: metadata
        env:
          TUF_REPO_PRIVATE_KEY_38600820f11a5f7d7ff42e6dfc9b03fd60272a3be6f895da2d882cea8bb1e20f: ${{ secrets.TUF_REPO_PRIVATE_KEY_38600820f11a5f7d7ff42e6dfc9b03fd60272a3be6f895da2d882cea8bb1e20f }}
        run: |
          # verify is currently not able to tell e.g. expiry from real invalid metadata
          # so we can't verify before trying to timestamp
          #tufrepo verify --root-hash 24d9b03f10ce0fe2e648833de26af60a4a8cd4e65bb396a8200a3194ae8ea76e
          tufrepo --keyring=env edit timestamp touch

      - name: Commit new timestamp
        working-directory: metadata
        run: |
          tufrepo verify --root-hash 24d9b03f10ce0fe2e648833de26af60a4a8cd4e65bb396a8200a3194ae8ea76e

          git config user.name tufrepo
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git commit -a -m "Repository timestamp"
          git show
          git push

      - name: File an issue on timestamp failure
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            const repo = context.repo.owner + "/" + context.repo.repo
            const issues = await github.rest.search.issuesAndPullRequests({
              q: "Timestamp+failed+in:title+state:open+type:issue+repo:" + repo,
            })
            if (issues.data.total_count > 0) {
              console.log("Timestamp failed but an issue exists already.")
            } else {
              console.log("Timestamp failed. Creating a new issue...")
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: "Timestamp cron job failed",
                body: "Timestamp cron job just failed. Have you tried turning it off and on again?"
              })
            }
